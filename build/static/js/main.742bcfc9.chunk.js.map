{"version":3,"sources":["services/notes.js","components/Note.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["baseUrl","request","axios","get","nonExisting","id","content","date","important","then","response","data","concat","newObject","post","put","Note","note","toggleImportance","label","className","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","console","log","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","length","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.742bcfc9.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 10000,\n    content: \"This note is not saved to server\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  };\n  return request.then((response) => response.data.concat(nonExisting));\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n  return (\n    <li className=\"note\">\n      {note.content} <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\nexport default Notification;\n","const Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Departement of Computer Science, University of Helsinki 2022\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { useState, useEffect } from \"react\";\nimport noteService from \"./services/notes\";\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\nimport \"./index.css\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    // axios\n    //   .get('http://localhost:3001/notes')\n    //   .then(response => {\n    //     setNotes(response.data)\n    //   })\n\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    };\n\n    // axios.post(\"http://localhost:3001/notes\", noteObject).then((response) => {\n    //   setNotes(notes.concat(response.data));\n    //   setNewNote(\"\");\n    // });\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    // axios.put(url, changedNote).then(response => {\n    //   setNotes(notes.map(note => note.id !== id ? note : response.data))\n    // })\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        // alert(`the note '${note.content}' was already deleted from server`);\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n    console.log(`importance of ${id} needs to be toggled`);\n    console.log(errorMessage, \"errorMessage\");\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}