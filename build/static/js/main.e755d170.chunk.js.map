{"version":3,"sources":["services/notes.js","components/Note.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["baseUrl","request","axios","get","nonExisting","id","content","date","important","then","response","data","concat","newObject","post","put","delete","Note","note","toggleImportance","handleDelete","label","className","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","console","log","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","length","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e755d170.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\nconst baseUrl = \"/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 10000,\n    content: \"This note is not saved to server\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  };\n  return request.then((response) => response.data.concat(nonExisting));\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deleteNote = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  deleteNote,\n};\n","import React from \"react\";\n\nconst Note = ({ note, toggleImportance, handleDelete }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n  const deleteLabel = \"Delete\";\n  return (\n    <li className=\"note\">\n      {note.content} <button onClick={toggleImportance}>{label}</button>{\" \"}\n      <button onClick={handleDelete}>{deleteLabel}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\nexport default Notification;\n","const Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Departement of Computer Science, University of Helsinki 2022\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { useState, useEffect } from \"react\";\nimport noteService from \"./services/notes\";\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\nimport \"./index.css\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    // axios\n    //   .get('http://localhost:3001/notes')\n    //   .then(response => {\n    //     setNotes(response.data)\n    //   })\n\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    };\n\n    // axios.post(\"http://localhost:3001/notes\", noteObject).then((response) => {\n    //   setNotes(notes.concat(response.data));\n    //   setNewNote(\"\");\n    // });\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    // axios.put(url, changedNote).then(response => {\n    //   setNotes(notes.map(note => note.id !== id ? note : response.data))\n    // })\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        // alert(`the note '${note.content}' was already deleted from server`);\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n    console.log(`importance of ${id} needs to be toggled`);\n    console.log(errorMessage, \"errorMessage\");\n  };\n\n  const handleDelete = (id) => {\n    noteService.deleteNote(id);\n    setNotes(notes.filter((note) => note.id !== id));\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n            handleDelete={() => handleDelete(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}